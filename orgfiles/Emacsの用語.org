* Emacs の用語

Emacs はいろいろな用語が多くて、設定をいじっているときにそれが何を指しているのか理解していないと困る事が多いのでここにまとめていくことにする。

** フォントフェイス

フェイスは文字を装飾するためのオブジェクト。代表的な属性としては下記のものがある。

- font(フォント)
- height(高さ)
- weight(太さ)
- slant(傾き)
- foreground(前景)
- background(背景)
- underline(アンダーライン)
- overline(オーバーライン)
- inherit(継承元)

定義済みのフェイス一覧を見るには、list-faces-display を実行する。特定のフェイスの属性を確認したい場合は describe-face を実行する。

ほとんどのモードはマイナーモードとして font-lock-mode を伴っており自動的に font-lock-mode が有効になる。すると、そのバッファのテキストには特定のフェイスが割り当てられるようになる。

https://ayatakesi.github.io/emacs/27.1/emacs-ja.html#Faces

** フック(hook)

フックは、関数もしくは関数のリストを持っている変数のこと。他の言語で言うコールバックのようなもの。たとえばフック ~find-file-not-found-hooks~ は、ファイルを探しても見つからなかったときに呼び出される関数（のリスト）である。フックは引数なしで呼び出される。

変数名が ~-hook(s)~ で終わらないフックも存在する。それはアブノーマルフックと呼ばれる。通常のフックは引数を取らず、戻り値も利用しないが、アブノーマルフックは引数を取ったり、戻り値を利用したりする。

フックに関数を追加するときは `add-hook` を使うべきである。add-hook は、リスト操作の関数よりも高級であり、重複している場合追加しない、といった機能を備えている。

#+begin_src lisp
(add-hook 'ruby-mode-hook 'lsp-mode) ; ruby-mode のフックに lsp-mode を追加する
#+end_src

add-hook は通常は2つの引数で十分だが、第3引数, 第4引数を与えることもできる。第3引数はフックの挿入位置のフラグ。省略した場合は先頭に追加される。先頭に追加された場合は他よりも先に呼び出される（が基本的には順序依存させないようにするべき）フラグを省略せず t を与えた場合はフックリストの末尾に追加される。第4引数はローカルフックのフラグとなっていて、これが t の場合はバッファローカルなフックとなる。

フックがちゃんと動くかどうか確かめたいときは `run-hook` を使う。たとえば下記のようにすると `org-mode-hook` フックに登録された関数が呼び出される。

#+begin_src lisp
(run-hooks 'org-mode-hook)
#+end_src
